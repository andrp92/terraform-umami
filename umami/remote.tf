# Export Terraform variable values to a var_file before calling Ansible
resource "local_file" "tf_ansible_vars_file_new" {
  depends_on = [google_compute_instance.umami-instance, google_sql_database_instance.instance]
  content    = <<-DOC
    # Ansible vars_file containing variable values from Terraform.
    # Generated by Terraform.
    
    # Required variables for database connection and proper Umami setup
    db_host: ${google_sql_database_instance.instance.private_ip_address}
    db_username: ${var.db_user}
    db_password: ${var.db_password}
    db_name: ${var.db_name}

    # Instance user
    user: ${var.gce_ssh_user}
    host_ip: ${google_compute_instance.umami-instance.network_interface.0.access_config.0.nat_ip}
    
    DOC
  filename   = "../ansible_playbooks/defaults/tf_ansible_vars.yml"
}

resource "null_resource" "run-ansible-playbooks" {

  depends_on = [google_compute_instance.umami-instance, google_sql_database.database]
  # Validates SSH connection before calling Ansible Playbooks
  provisioner "remote-exec" {
    inline = ["echo 'SSH Readiness Check'"]

    connection {
      type        = "ssh"
      user        = var.gce_ssh_user
      host        = google_compute_instance.umami-instance.network_interface[0].access_config[0].nat_ip
      private_key = file("${var.private_key_path}")
    }
  }

  provisioner "local-exec" {

    command = "ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i '${google_compute_instance.umami-instance.network_interface[0].access_config[0].nat_ip},' --private-key ${var.private_key_path} ../ansible_playbooks/main.yml -u ${var.gce_ssh_user}"

  }
}
